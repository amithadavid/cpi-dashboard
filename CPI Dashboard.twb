<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='All_India_Index_july2019_20Aug2020_dec20_2' inline='true' name='federated.154eple1m8v1xr19ln95z1nufge6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All_India_Index_july2019_20Aug2020_dec20_2' name='textscan.18957du05mr03r147pzd40eqkk4c'>
            <connection class='textscan' directory='C:/Users/AMITHA/Downloads' filename='All_India_Index_july2019_20Aug2020_dec20_2.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.18957du05mr03r147pzd40eqkk4c' name='All_India_Index_july2019_20Aug2020_dec20_2.csv' table='[All_India_Index_july2019_20Aug2020_dec20_2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Sector' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Month' ordinal='2' />
            <column datatype='real' name='Cereals and products' ordinal='3' />
            <column datatype='real' name='Meat and fish' ordinal='4' />
            <column datatype='real' name='Egg' ordinal='5' />
            <column datatype='real' name='Milk and products' ordinal='6' />
            <column datatype='real' name='Oils and fats' ordinal='7' />
            <column datatype='real' name='Fruits' ordinal='8' />
            <column datatype='real' name='Vegetables' ordinal='9' />
            <column datatype='real' name='Pulses and products' ordinal='10' />
            <column datatype='real' name='Sugar and Confectionery' ordinal='11' />
            <column datatype='real' name='Spices' ordinal='12' />
            <column datatype='real' name='Non-alcoholic beverages' ordinal='13' />
            <column datatype='real' name='Prepared meals, snacks, sweets etc.' ordinal='14' />
            <column datatype='real' name='Food and beverages' ordinal='15' />
            <column datatype='real' name='Pan, tobacco and intoxicants' ordinal='16' />
            <column datatype='real' name='Clothing' ordinal='17' />
            <column datatype='real' name='Footwear' ordinal='18' />
            <column datatype='real' name='Clothing and footwear' ordinal='19' />
            <column datatype='real' name='Housing' ordinal='20' />
            <column datatype='real' name='Fuel and light' ordinal='21' />
            <column datatype='real' name='Household goods and services' ordinal='22' />
            <column datatype='real' name='Health' ordinal='23' />
            <column datatype='real' name='Transport and communication' ordinal='24' />
            <column datatype='real' name='Recreation and amusement' ordinal='25' />
            <column datatype='real' name='Education' ordinal='26' />
            <column datatype='real' name='Personal care and effects' ordinal='27' />
            <column datatype='real' name='Miscellaneous' ordinal='28' />
            <column datatype='real' name='General index' ordinal='29' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.18957du05mr03r147pzd40eqkk4c' name='All_India_Index_july2019_20Aug2020_dec20_2.csv' table='[All_India_Index_july2019_20Aug2020_dec20_2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Sector' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Month' ordinal='2' />
            <column datatype='real' name='Cereals and products' ordinal='3' />
            <column datatype='real' name='Meat and fish' ordinal='4' />
            <column datatype='real' name='Egg' ordinal='5' />
            <column datatype='real' name='Milk and products' ordinal='6' />
            <column datatype='real' name='Oils and fats' ordinal='7' />
            <column datatype='real' name='Fruits' ordinal='8' />
            <column datatype='real' name='Vegetables' ordinal='9' />
            <column datatype='real' name='Pulses and products' ordinal='10' />
            <column datatype='real' name='Sugar and Confectionery' ordinal='11' />
            <column datatype='real' name='Spices' ordinal='12' />
            <column datatype='real' name='Non-alcoholic beverages' ordinal='13' />
            <column datatype='real' name='Prepared meals, snacks, sweets etc.' ordinal='14' />
            <column datatype='real' name='Food and beverages' ordinal='15' />
            <column datatype='real' name='Pan, tobacco and intoxicants' ordinal='16' />
            <column datatype='real' name='Clothing' ordinal='17' />
            <column datatype='real' name='Footwear' ordinal='18' />
            <column datatype='real' name='Clothing and footwear' ordinal='19' />
            <column datatype='real' name='Housing' ordinal='20' />
            <column datatype='real' name='Fuel and light' ordinal='21' />
            <column datatype='real' name='Household goods and services' ordinal='22' />
            <column datatype='real' name='Health' ordinal='23' />
            <column datatype='real' name='Transport and communication' ordinal='24' />
            <column datatype='real' name='Recreation and amusement' ordinal='25' />
            <column datatype='real' name='Education' ordinal='26' />
            <column datatype='real' name='Personal care and effects' ordinal='27' />
            <column datatype='real' name='Miscellaneous' ordinal='28' />
            <column datatype='real' name='General index' ordinal='29' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sector</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sector]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Sector</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cereals and products</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cereals and products]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Cereals and products</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Meat and fish</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Meat and fish]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Meat and fish</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Egg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Egg]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Egg</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Milk and products</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Milk and products]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Milk and products</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oils and fats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oils and fats]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Oils and fats</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fruits</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fruits]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Fruits</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vegetables</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vegetables]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Vegetables</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pulses and products</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pulses and products]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Pulses and products</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sugar and Confectionery</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sugar and Confectionery]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Sugar and Confectionery</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Spices]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Spices</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Non-alcoholic beverages</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Non-alcoholic beverages]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Non-alcoholic beverages</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prepared meals, snacks, sweets etc.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Prepared meals, snacks, sweets etc.]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Prepared meals, snacks, sweets etc.</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food and beverages</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Food and beverages]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Food and beverages</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pan, tobacco and intoxicants</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pan, tobacco and intoxicants]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Pan, tobacco and intoxicants</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clothing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Clothing]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Clothing</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Footwear</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Footwear]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Footwear</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clothing and footwear</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Clothing and footwear]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Clothing and footwear</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Housing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Housing]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Housing</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fuel and light</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fuel and light]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Fuel and light</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household goods and services</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Household goods and services]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Household goods and services</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Health</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transport and communication</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transport and communication]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Transport and communication</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recreation and amusement</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recreation and amusement]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Recreation and amusement</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Education]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Education</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Personal care and effects</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Personal care and effects]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Personal care and effects</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Miscellaneous</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Miscellaneous]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>Miscellaneous</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>General index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[General index]</local-name>
            <parent-name>[All_India_Index_july2019_20Aug2020_dec20_2.csv]</parent-name>
            <remote-alias>General index</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Time Column' datatype='date' name='[Calculation_1485624933207232514]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MAKEDATE([Year], DATEPART(&apos;month&apos;, DATEPARSE(&apos;MMMM&apos;, [Month])), 1)' />
      </column>
      <column datatype='real' name='[Cereals and products]' role='measure' type='quantitative' />
      <column datatype='real' name='[Clothing and footwear]' role='measure' type='quantitative' />
      <column datatype='real' name='[Clothing]' role='measure' type='quantitative' />
      <column datatype='real' name='[Education]' role='measure' type='quantitative' />
      <column datatype='real' name='[Egg]' role='measure' type='quantitative' />
      <column datatype='real' name='[Food and beverages]' role='measure' type='quantitative' />
      <column datatype='real' name='[Footwear]' role='measure' type='quantitative' />
      <column datatype='real' name='[Fruits]' role='measure' type='quantitative' />
      <column datatype='real' name='[Fuel and light]' role='measure' type='quantitative' />
      <column datatype='real' name='[General index]' role='measure' type='quantitative' />
      <column datatype='real' name='[Health]' role='measure' type='quantitative' />
      <column datatype='real' name='[Household goods and services]' role='measure' type='quantitative' />
      <column datatype='real' name='[Housing]' role='measure' type='quantitative' />
      <column datatype='real' name='[Meat and fish]' role='measure' type='quantitative' />
      <column datatype='real' name='[Milk and products]' role='measure' type='quantitative' />
      <column datatype='real' name='[Miscellaneous]' role='measure' type='quantitative' />
      <column datatype='string' name='[Month]' role='dimension' type='nominal' />
      <column datatype='real' name='[Non-alcoholic beverages]' role='measure' type='quantitative' />
      <column datatype='real' name='[Oils and fats]' role='measure' type='quantitative' />
      <column datatype='real' name='[Pan, tobacco and intoxicants]' role='measure' type='quantitative' />
      <column datatype='real' name='[Personal care and effects]' role='measure' type='quantitative' />
      <column datatype='real' name='[Prepared meals, snacks, sweets etc.]' role='measure' type='quantitative' />
      <column datatype='real' name='[Pulses and products]' role='measure' type='quantitative' />
      <column datatype='real' name='[Recreation and amusement]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
      <column datatype='real' name='[Spices]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sugar and Confectionery]' role='measure' type='quantitative' />
      <column datatype='real' name='[Transport and communication]' role='measure' type='quantitative' />
      <column datatype='real' name='[Vegetables]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='All_India_Index_july2019_20Aug2020_dec20_2.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8:qk]' pivot='key' type='quantitative' />
      <column-instance column='[General index]' derivation='Avg' name='[avg:General index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[General index]' derivation='Median' name='[med:General index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Cereals and products]' derivation='Sum' name='[sum:Cereals and products:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clothing and footwear]' derivation='Sum' name='[sum:Clothing and footwear:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Clothing]' derivation='Sum' name='[sum:Clothing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Education]' derivation='Sum' name='[sum:Education:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Egg]' derivation='Sum' name='[sum:Egg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Food and beverages]' derivation='Sum' name='[sum:Food and beverages:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Footwear]' derivation='Sum' name='[sum:Footwear:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fruits]' derivation='Sum' name='[sum:Fruits:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fuel and light]' derivation='Sum' name='[sum:Fuel and light:qk]' pivot='key' type='quantitative' />
      <column-instance column='[General index]' derivation='Sum' name='[sum:General index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health]' derivation='Sum' name='[sum:Health:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Household goods and services]' derivation='Sum' name='[sum:Household goods and services:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Housing]' derivation='Sum' name='[sum:Housing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Meat and fish]' derivation='Sum' name='[sum:Meat and fish:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Milk and products]' derivation='Sum' name='[sum:Milk and products:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Miscellaneous]' derivation='Sum' name='[sum:Miscellaneous:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Non-alcoholic beverages]' derivation='Sum' name='[sum:Non-alcoholic beverages:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oils and fats]' derivation='Sum' name='[sum:Oils and fats:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pan, tobacco and intoxicants]' derivation='Sum' name='[sum:Pan, tobacco and intoxicants:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Personal care and effects]' derivation='Sum' name='[sum:Personal care and effects:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Prepared meals, snacks, sweets etc.]' derivation='Sum' name='[sum:Prepared meals, snacks, sweets etc.:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pulses and products]' derivation='Sum' name='[sum:Pulses and products:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Recreation and amusement]' derivation='Sum' name='[sum:Recreation and amusement:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Spices]' derivation='Sum' name='[sum:Spices:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sugar and Confectionery]' derivation='Sum' name='[sum:Sugar and Confectionery:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transport and communication]' derivation='Sum' name='[sum:Transport and communication:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vegetables]' derivation='Sum' name='[sum:Vegetables:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Month:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;May&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;February&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;April&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Fruits:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Cereals and products:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Prepared meals, snacks, sweets etc.:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Education:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Sugar and Confectionery:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Health:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Housing:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Fuel and light:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Egg:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Transport and communication:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Oils and fats:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Pulses and products:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Miscellaneous:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Food and beverages:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Vegetables:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Household goods and services:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Meat and fish:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Non-alcoholic beverages:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Pan, tobacco and intoxicants:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Personal care and effects:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Clothing and footwear:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Footwear:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Clothing:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Recreation and amusement:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Milk and products:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[avg:General index:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[med:General index:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:General index:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[__tableau_internal_object_id__].[cnt:All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Spices:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sector:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Rural&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Urban&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rural+Urban&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Year:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2021</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2017</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2022</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2018</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2014</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2019</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2023</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2020</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2015</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2016</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Sector' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Month' />
        <field-sort-custom-order field='Calculation_1485624933207232514' />
        <field-sort-custom-order field='Calculation_1485624933206786048' />
        <field-sort-custom-order field='Cereals and products' />
        <field-sort-custom-order field='Meat and fish' />
        <field-sort-custom-order field='Egg' />
        <field-sort-custom-order field='Milk and products' />
        <field-sort-custom-order field='Oils and fats' />
        <field-sort-custom-order field='Fruits' />
        <field-sort-custom-order field='Vegetables' />
        <field-sort-custom-order field='Pulses and products' />
        <field-sort-custom-order field='Sugar and Confectionery' />
        <field-sort-custom-order field='Spices' />
        <field-sort-custom-order field='Non-alcoholic beverages' />
        <field-sort-custom-order field='Prepared meals, snacks, sweets etc.' />
        <field-sort-custom-order field='Food and beverages' />
        <field-sort-custom-order field='Pan, tobacco and intoxicants' />
        <field-sort-custom-order field='Clothing' />
        <field-sort-custom-order field='Footwear' />
        <field-sort-custom-order field='Clothing and footwear' />
        <field-sort-custom-order field='Housing' />
        <field-sort-custom-order field='Fuel and light' />
        <field-sort-custom-order field='Household goods and services' />
        <field-sort-custom-order field='Health' />
        <field-sort-custom-order field='Transport and communication' />
        <field-sort-custom-order field='Recreation and amusement' />
        <field-sort-custom-order field='Education' />
        <field-sort-custom-order field='Personal care and effects' />
        <field-sort-custom-order field='Miscellaneous' />
        <field-sort-custom-order field='General index' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='All_India_Index_july2019_20Aug2020_dec20_2.csv' id='All_India_Index_july2019_20Aug2020_dec20_2.csv_AF9F2742880D47959079B1B1B678CEA8'>
            <properties context=''>
              <relation connection='textscan.18957du05mr03r147pzd40eqkk4c' name='All_India_Index_july2019_20Aug2020_dec20_2.csv' table='[All_India_Index_july2019_20Aug2020_dec20_2#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Sector' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='string' name='Month' ordinal='2' />
                  <column datatype='real' name='Cereals and products' ordinal='3' />
                  <column datatype='real' name='Meat and fish' ordinal='4' />
                  <column datatype='real' name='Egg' ordinal='5' />
                  <column datatype='real' name='Milk and products' ordinal='6' />
                  <column datatype='real' name='Oils and fats' ordinal='7' />
                  <column datatype='real' name='Fruits' ordinal='8' />
                  <column datatype='real' name='Vegetables' ordinal='9' />
                  <column datatype='real' name='Pulses and products' ordinal='10' />
                  <column datatype='real' name='Sugar and Confectionery' ordinal='11' />
                  <column datatype='real' name='Spices' ordinal='12' />
                  <column datatype='real' name='Non-alcoholic beverages' ordinal='13' />
                  <column datatype='real' name='Prepared meals, snacks, sweets etc.' ordinal='14' />
                  <column datatype='real' name='Food and beverages' ordinal='15' />
                  <column datatype='real' name='Pan, tobacco and intoxicants' ordinal='16' />
                  <column datatype='real' name='Clothing' ordinal='17' />
                  <column datatype='real' name='Footwear' ordinal='18' />
                  <column datatype='real' name='Clothing and footwear' ordinal='19' />
                  <column datatype='real' name='Housing' ordinal='20' />
                  <column datatype='real' name='Fuel and light' ordinal='21' />
                  <column datatype='real' name='Household goods and services' ordinal='22' />
                  <column datatype='real' name='Health' ordinal='23' />
                  <column datatype='real' name='Transport and communication' ordinal='24' />
                  <column datatype='real' name='Recreation and amusement' ordinal='25' />
                  <column datatype='real' name='Education' ordinal='26' />
                  <column datatype='real' name='Personal care and effects' ordinal='27' />
                  <column datatype='real' name='Miscellaneous' ordinal='28' />
                  <column datatype='real' name='General index' ordinal='29' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='GRAPH A: Month x Measured Value by Sector'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_India_Index_july2019_20Aug2020_dec20_2' name='federated.154eple1m8v1xr19ln95z1nufge6' />
          </datasources>
          <datasource-dependencies datasource='federated.154eple1m8v1xr19ln95z1nufge6'>
            <column caption='Time Column' datatype='date' name='[Calculation_1485624933207232514]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([Year], DATEPART(&apos;month&apos;, DATEPARSE(&apos;MMMM&apos;, [Month])), 1)' />
            </column>
            <column datatype='real' name='[Cereals and products]' role='measure' type='quantitative' />
            <column datatype='real' name='[Clothing and footwear]' role='measure' type='quantitative' />
            <column datatype='real' name='[Clothing]' role='measure' type='quantitative' />
            <column datatype='real' name='[Education]' role='measure' type='quantitative' />
            <column datatype='real' name='[Egg]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food and beverages]' role='measure' type='quantitative' />
            <column datatype='real' name='[Footwear]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fruits]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fuel and light]' role='measure' type='quantitative' />
            <column datatype='real' name='[General index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health]' role='measure' type='quantitative' />
            <column datatype='real' name='[Household goods and services]' role='measure' type='quantitative' />
            <column datatype='real' name='[Housing]' role='measure' type='quantitative' />
            <column datatype='real' name='[Meat and fish]' role='measure' type='quantitative' />
            <column datatype='real' name='[Milk and products]' role='measure' type='quantitative' />
            <column datatype='real' name='[Miscellaneous]' role='measure' type='quantitative' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='real' name='[Non-alcoholic beverages]' role='measure' type='quantitative' />
            <column datatype='real' name='[Oils and fats]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pan, tobacco and intoxicants]' role='measure' type='quantitative' />
            <column datatype='real' name='[Personal care and effects]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prepared meals, snacks, sweets etc.]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pulses and products]' role='measure' type='quantitative' />
            <column datatype='real' name='[Recreation and amusement]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='real' name='[Spices]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sugar and Confectionery]' role='measure' type='quantitative' />
            <column datatype='real' name='[Transport and communication]' role='measure' type='quantitative' />
            <column datatype='real' name='[Vegetables]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cereals and products]' derivation='Sum' name='[sum:Cereals and products:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clothing and footwear]' derivation='Sum' name='[sum:Clothing and footwear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clothing]' derivation='Sum' name='[sum:Clothing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Education]' derivation='Sum' name='[sum:Education:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Egg]' derivation='Sum' name='[sum:Egg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Food and beverages]' derivation='Sum' name='[sum:Food and beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Footwear]' derivation='Sum' name='[sum:Footwear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fruits]' derivation='Sum' name='[sum:Fruits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fuel and light]' derivation='Sum' name='[sum:Fuel and light:qk]' pivot='key' type='quantitative' />
            <column-instance column='[General index]' derivation='Sum' name='[sum:General index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health]' derivation='Sum' name='[sum:Health:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Household goods and services]' derivation='Sum' name='[sum:Household goods and services:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Housing]' derivation='Sum' name='[sum:Housing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Meat and fish]' derivation='Sum' name='[sum:Meat and fish:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Milk and products]' derivation='Sum' name='[sum:Milk and products:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Miscellaneous]' derivation='Sum' name='[sum:Miscellaneous:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Non-alcoholic beverages]' derivation='Sum' name='[sum:Non-alcoholic beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oils and fats]' derivation='Sum' name='[sum:Oils and fats:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pan, tobacco and intoxicants]' derivation='Sum' name='[sum:Pan, tobacco and intoxicants:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Personal care and effects]' derivation='Sum' name='[sum:Personal care and effects:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prepared meals, snacks, sweets etc.]' derivation='Sum' name='[sum:Prepared meals, snacks, sweets etc.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pulses and products]' derivation='Sum' name='[sum:Pulses and products:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recreation and amusement]' derivation='Sum' name='[sum:Recreation and amusement:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spices]' derivation='Sum' name='[sum:Spices:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sugar and Confectionery]' derivation='Sum' name='[sum:Sugar and Confectionery:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Transport and communication]' derivation='Sum' name='[sum:Transport and communication:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vegetables]' derivation='Sum' name='[sum:Vegetables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1485624933207232514]' derivation='Month-Trunc' name='[tmn:Calculation_1485624933207232514:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Month:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Month:nk]' />
              <groupfilter function='member' level='[none:Month:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Urban&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]' filter-group='3' included-values='in-range'>
            <min>#2013-01-01 00:00:00#</min>
            <max>#2020-11-02 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</column>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Month:nk]</column>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]</column>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height' field='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Month:nk]' />
              <wedge-size column='[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]' />
              <text column='[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]' />
              <lod column='[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]' />
              <lod column='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]</cols>
      </table>
      <simple-id uuid='{07B4CEB1-95B9-4D6D-A936-F2D674AFA6E7}' />
    </worksheet>
    <worksheet name='GRAPH B: Month and Year x Measured Values'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_India_Index_july2019_20Aug2020_dec20_2' name='federated.154eple1m8v1xr19ln95z1nufge6' />
          </datasources>
          <datasource-dependencies datasource='federated.154eple1m8v1xr19ln95z1nufge6'>
            <column caption='Time Column' datatype='date' name='[Calculation_1485624933207232514]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([Year], DATEPART(&apos;month&apos;, DATEPARSE(&apos;MMMM&apos;, [Month])), 1)' />
            </column>
            <column datatype='real' name='[Housing]' role='measure' type='quantitative' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='real' name='[Spices]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1485624933207232514]' derivation='MY' name='[my:Calculation_1485624933207232514:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Housing]' derivation='Sum' name='[sum:Housing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spices]' derivation='Sum' name='[sum:Spices:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1485624933207232514]' derivation='Month-Trunc' name='[tmn:Calculation_1485624933207232514:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Housing:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Spices:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.154eple1m8v1xr19ln95z1nufge6].[my:Calculation_1485624933207232514:ok]'>
            <groupfilter function='level-members' level='[my:Calculation_1485624933207232514:ok]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Urban&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]' filter-group='3' included-values='in-range'>
            <min>#2013-01-01 00:00:00#</min>
            <max>#2020-11-02 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</column>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[my:Calculation_1485624933207232514:ok]</column>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]</column>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]' field-type='quantitative' max='#2023-08-04 02:49:54.851#' min='#2011-09-27 14:37:31.335#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]' field-type='quantitative' max='373.12751242151012' min='5.620245080051415' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' value='GRAPH C Measure&#10;'>
              <formatted-text>
                <run>GRAPH C Measure&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]</rows>
        <cols>[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]</cols>
      </table>
      <simple-id uuid='{3B1B349E-2859-4BEA-B04B-4F82E5E7904A}' />
    </worksheet>
    <worksheet name='GRAPH C: Meaured Value x Sector'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_India_Index_july2019_20Aug2020_dec20_2' name='federated.154eple1m8v1xr19ln95z1nufge6' />
          </datasources>
          <datasource-dependencies datasource='federated.154eple1m8v1xr19ln95z1nufge6'>
            <column caption='Time Column' datatype='date' name='[Calculation_1485624933207232514]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([Year], DATEPART(&apos;month&apos;, DATEPARSE(&apos;MMMM&apos;, [Month])), 1)' />
            </column>
            <column datatype='real' name='[Cereals and products]' role='measure' type='quantitative' />
            <column datatype='real' name='[Clothing and footwear]' role='measure' type='quantitative' />
            <column datatype='real' name='[Clothing]' role='measure' type='quantitative' />
            <column datatype='real' name='[Education]' role='measure' type='quantitative' />
            <column datatype='real' name='[Egg]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food and beverages]' role='measure' type='quantitative' />
            <column datatype='real' name='[Footwear]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fruits]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fuel and light]' role='measure' type='quantitative' />
            <column datatype='real' name='[General index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health]' role='measure' type='quantitative' />
            <column datatype='real' name='[Household goods and services]' role='measure' type='quantitative' />
            <column datatype='real' name='[Housing]' role='measure' type='quantitative' />
            <column datatype='real' name='[Meat and fish]' role='measure' type='quantitative' />
            <column datatype='real' name='[Milk and products]' role='measure' type='quantitative' />
            <column datatype='real' name='[Miscellaneous]' role='measure' type='quantitative' />
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='real' name='[Non-alcoholic beverages]' role='measure' type='quantitative' />
            <column datatype='real' name='[Oils and fats]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pan, tobacco and intoxicants]' role='measure' type='quantitative' />
            <column datatype='real' name='[Personal care and effects]' role='measure' type='quantitative' />
            <column datatype='real' name='[Prepared meals, snacks, sweets etc.]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pulses and products]' role='measure' type='quantitative' />
            <column datatype='real' name='[Recreation and amusement]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
            <column datatype='real' name='[Spices]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sugar and Confectionery]' role='measure' type='quantitative' />
            <column datatype='real' name='[Transport and communication]' role='measure' type='quantitative' />
            <column datatype='real' name='[Vegetables]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cereals and products]' derivation='Sum' name='[sum:Cereals and products:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clothing and footwear]' derivation='Sum' name='[sum:Clothing and footwear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clothing]' derivation='Sum' name='[sum:Clothing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Education]' derivation='Sum' name='[sum:Education:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Egg]' derivation='Sum' name='[sum:Egg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Food and beverages]' derivation='Sum' name='[sum:Food and beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Footwear]' derivation='Sum' name='[sum:Footwear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fruits]' derivation='Sum' name='[sum:Fruits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fuel and light]' derivation='Sum' name='[sum:Fuel and light:qk]' pivot='key' type='quantitative' />
            <column-instance column='[General index]' derivation='Sum' name='[sum:General index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health]' derivation='Sum' name='[sum:Health:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Household goods and services]' derivation='Sum' name='[sum:Household goods and services:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Housing]' derivation='Sum' name='[sum:Housing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Meat and fish]' derivation='Sum' name='[sum:Meat and fish:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Milk and products]' derivation='Sum' name='[sum:Milk and products:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Miscellaneous]' derivation='Sum' name='[sum:Miscellaneous:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Non-alcoholic beverages]' derivation='Sum' name='[sum:Non-alcoholic beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oils and fats]' derivation='Sum' name='[sum:Oils and fats:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pan, tobacco and intoxicants]' derivation='Sum' name='[sum:Pan, tobacco and intoxicants:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Personal care and effects]' derivation='Sum' name='[sum:Personal care and effects:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Prepared meals, snacks, sweets etc.]' derivation='Sum' name='[sum:Prepared meals, snacks, sweets etc.:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pulses and products]' derivation='Sum' name='[sum:Pulses and products:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recreation and amusement]' derivation='Sum' name='[sum:Recreation and amusement:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spices]' derivation='Sum' name='[sum:Spices:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sugar and Confectionery]' derivation='Sum' name='[sum:Sugar and Confectionery:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Transport and communication]' derivation='Sum' name='[sum:Transport and communication:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vegetables]' derivation='Sum' name='[sum:Vegetables:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1485624933207232514]' derivation='Month-Trunc' name='[tmn:Calculation_1485624933207232514:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <manual-sort column='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Cereals and products:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Clothing:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Clothing and footwear:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Egg:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Food and beverages:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Footwear:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Fruits:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Fuel and light:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:General index:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Health:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Housing:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Household goods and services:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Meat and fish:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Milk and products:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Miscellaneous:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Non-alcoholic beverages:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Oils and fats:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Pan, tobacco and intoxicants:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Personal care and effects:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Sector:nk]' member='&quot;Urban&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]' filter-group='3' included-values='in-range'>
            <min>#2013-01-01 00:00:00#</min>
            <max>#2020-11-02 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</column>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]</column>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk] * [federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values])</rows>
        <cols>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1E2BD5FE-E57D-4051-A379-607640C1C79B}' />
    </worksheet>
    <worksheet name='GRAPH D: Month x Measured Value'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_India_Index_july2019_20Aug2020_dec20_2' name='federated.154eple1m8v1xr19ln95z1nufge6' />
          </datasources>
          <datasource-dependencies datasource='federated.154eple1m8v1xr19ln95z1nufge6'>
            <column caption='Time Column' datatype='date' name='[Calculation_1485624933207232514]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE([Year], DATEPART(&apos;month&apos;, DATEPARSE(&apos;MMMM&apos;, [Month])), 1)' />
            </column>
            <column datatype='string' name='[Month]' role='dimension' type='nominal' />
            <column datatype='real' name='[Spices]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Month]' derivation='None' name='[none:Month:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Spices]' derivation='Sum' name='[sum:Spices:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1485624933207232514]' derivation='Month-Trunc' name='[tmn:Calculation_1485624933207232514:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Spices:qk]&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]' filter-group='3' included-values='in-range'>
            <min>#2013-01-01 00:00:00#</min>
            <max>#2020-11-02 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</column>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]' field-type='quantitative' max='556.12319987241449' min='410.23064018792269' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' value='GRAPH D Measure'>
              <formatted-text>
                <run>GRAPH D Measure</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Year:ok]' />
              <lod column='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]</rows>
        <cols>([federated.154eple1m8v1xr19ln95z1nufge6].[none:Month:nk] / [federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{94495915-B722-445F-AD9B-A144B608CF87}' />
    </worksheet>
    <worksheet name='Graph E: Measures Values'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Graph E: Measure Values</run>
            <run>Ã†&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='All_India_Index_july2019_20Aug2020_dec20_2' name='federated.154eple1m8v1xr19ln95z1nufge6' />
          </datasources>
          <datasource-dependencies datasource='federated.154eple1m8v1xr19ln95z1nufge6'>
            <column datatype='real' name='[Cereals and products]' role='measure' type='quantitative' />
            <column datatype='real' name='[Clothing and footwear]' role='measure' type='quantitative' />
            <column datatype='real' name='[Clothing]' role='measure' type='quantitative' />
            <column datatype='real' name='[Education]' role='measure' type='quantitative' />
            <column datatype='real' name='[Egg]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food and beverages]' role='measure' type='quantitative' />
            <column datatype='real' name='[Footwear]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fruits]' role='measure' type='quantitative' />
            <column datatype='real' name='[Fuel and light]' role='measure' type='quantitative' />
            <column datatype='real' name='[General index]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health]' role='measure' type='quantitative' />
            <column datatype='real' name='[Household goods and services]' role='measure' type='quantitative' />
            <column datatype='real' name='[Housing]' role='measure' type='quantitative' />
            <column datatype='real' name='[Meat and fish]' role='measure' type='quantitative' />
            <column datatype='real' name='[Milk and products]' role='measure' type='quantitative' />
            <column datatype='real' name='[Miscellaneous]' role='measure' type='quantitative' />
            <column datatype='real' name='[Non-alcoholic beverages]' role='measure' type='quantitative' />
            <column datatype='real' name='[Oils and fats]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pan, tobacco and intoxicants]' role='measure' type='quantitative' />
            <column datatype='real' name='[Personal care and effects]' role='measure' type='quantitative' />
            <column-instance column='[Cereals and products]' derivation='Sum' name='[sum:Cereals and products:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clothing and footwear]' derivation='Sum' name='[sum:Clothing and footwear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Clothing]' derivation='Sum' name='[sum:Clothing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Education]' derivation='Sum' name='[sum:Education:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Egg]' derivation='Sum' name='[sum:Egg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Food and beverages]' derivation='Sum' name='[sum:Food and beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Footwear]' derivation='Sum' name='[sum:Footwear:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fruits]' derivation='Sum' name='[sum:Fruits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Fuel and light]' derivation='Sum' name='[sum:Fuel and light:qk]' pivot='key' type='quantitative' />
            <column-instance column='[General index]' derivation='Sum' name='[sum:General index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health]' derivation='Sum' name='[sum:Health:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Household goods and services]' derivation='Sum' name='[sum:Household goods and services:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Housing]' derivation='Sum' name='[sum:Housing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Meat and fish]' derivation='Sum' name='[sum:Meat and fish:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Milk and products]' derivation='Sum' name='[sum:Milk and products:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Miscellaneous]' derivation='Sum' name='[sum:Miscellaneous:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Non-alcoholic beverages]' derivation='Sum' name='[sum:Non-alcoholic beverages:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oils and fats]' derivation='Sum' name='[sum:Oils and fats:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pan, tobacco and intoxicants]' derivation='Sum' name='[sum:Pan, tobacco and intoxicants:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Personal care and effects]' derivation='Sum' name='[sum:Personal care and effects:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Oils and fats:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Personal care and effects:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Non-alcoholic beverages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Miscellaneous:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Footwear:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Fuel and light:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Household goods and services:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Cereals and products:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Health:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Housing:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:General index:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Milk and products:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Egg:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Fruits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Education:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Clothing and footwear:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Food and beverages:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Clothing:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Pan, tobacco and intoxicants:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Meat and fish:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Oils and fats:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Personal care and effects:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Non-alcoholic beverages:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Miscellaneous:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Footwear:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Fuel and light:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Household goods and services:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Cereals and products:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Health:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Housing:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:General index:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Milk and products:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Egg:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Fruits:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Education:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Clothing and footwear:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Food and beverages:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Clothing:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Pan, tobacco and intoxicants:qk]&quot;</bucket>
              <bucket>&quot;[federated.154eple1m8v1xr19ln95z1nufge6].[sum:Meat and fish:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]' field-type='quantitative' max='55000.0' min='40000.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</rows>
        <cols>[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{CE3E119D-02A5-4500-B725-0235C4B29210}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='CPI Dynamic Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource caption='All_India_Index_july2019_20Aug2020_dec20_2' name='federated.154eple1m8v1xr19ln95z1nufge6' />
      </datasources>
      <datasource-dependencies datasource='federated.154eple1m8v1xr19ln95z1nufge6'>
        <column caption='Time Column' datatype='date' name='[Calculation_1485624933207232514]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='MAKEDATE([Year], DATEPART(&apos;month&apos;, DATEPARSE(&apos;MMMM&apos;, [Month])), 1)' />
        </column>
        <column datatype='string' name='[Sector]' role='dimension' type='nominal' />
        <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1485624933207232514]' derivation='Month-Trunc' name='[tmn:Calculation_1485624933207232514:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='39250' id='3' name='GRAPH B: Month and Year x Measured Values' w='44571' x='55071' y='10750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone h='48375' id='5' name='GRAPH C: Meaured Value x Sector' w='50214' x='71' y='51375'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone h='40000' id='7' name='GRAPH A: Month x Measured Value by Sector' w='32143' x='71' y='10625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone h='48375' id='8' name='GRAPH D: Month x Measured Value' w='49214' x='50786' y='51250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone h='9250' id='10' name='GRAPH B: Month and Year x Measured Values' param='[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]' type-v2='filter' values='database' w='22643' x='71' y='125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone h='9125' id='11' mode='checkdropdown' name='GRAPH C: Meaured Value x Sector' param='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]' type-v2='filter' values='database' w='15000' x='23429' y='250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='9125' id='12' type-v2='text' w='31786' x='39000' y='125'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Bookman Old Style' fontsize='20' underline='true'>CPI Dynamic Dashboard</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone h='9000' id='14' mode='checkdropdown' name='GRAPH B: Month and Year x Measured Values' param='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' type-v2='filter' values='database' w='13643' x='71500' y='125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone h='9125' id='15' mode='checkdropdown' name='GRAPH D: Month x Measured Value' param='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' type-v2='filter' values='database' w='13500' x='86000' y='0'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone h='39125' id='16' name='Graph E: Measures Values' w='21786' x='32857' y='10875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='21' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
                <zone forceUpdate='true' h='9125' id='12' type-v2='text' w='31786' x='39000' y='125'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Bookman Old Style' fontsize='20' underline='true'>CPI Dynamic Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e6' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40000' id='7' is-fixed='true' name='GRAPH A: Month x Measured Value by Sector' w='32143' x='71' y='10625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e6' />
                  </zone-style>
                </zone>
                <zone h='9250' id='10' name='GRAPH B: Month and Year x Measured Values' param='[federated.154eple1m8v1xr19ln95z1nufge6].[tmn:Calculation_1485624933207232514:qk]' type-v2='filter' values='database' w='22643' x='71' y='125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e6' />
                  </zone-style>
                </zone>
                <zone h='9000' id='14' mode='checkdropdown' name='GRAPH B: Month and Year x Measured Values' param='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' type-v2='filter' values='database' w='13643' x='71500' y='125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e6' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39250' id='3' is-fixed='true' name='GRAPH B: Month and Year x Measured Values' w='44571' x='55071' y='10750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e6' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39125' id='16' is-fixed='true' name='Graph E: Measures Values' w='21786' x='32857' y='10875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='15' mode='checkdropdown' name='GRAPH D: Month x Measured Value' param='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' type-v2='filter' values='database' w='13500' x='86000' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e6' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48375' id='8' is-fixed='true' name='GRAPH D: Month x Measured Value' w='49214' x='50786' y='51250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e6' />
                  </zone-style>
                </zone>
                <zone h='9125' id='11' mode='checkdropdown' name='GRAPH C: Meaured Value x Sector' param='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]' type-v2='filter' values='database' w='15000' x='23429' y='250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e6' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48375' id='5' is-fixed='true' name='GRAPH C: Meaured Value x Sector' w='50214' x='71' y='51375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6e6e6' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F8920395-022B-49E8-A261-061BBBED5120}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='GRAPH A: Month x Measured Value by Sector'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Month:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</field>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Month:nk]</field>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A510E306-F098-4617-B508-D66F095654C4}' />
    </window>
    <window class='worksheet' name='GRAPH B: Month and Year x Measured Values'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</field>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Month:nk]</field>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Year:qk]</field>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[yr:Calculation_1485624933207232514:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B3119AE-6524-4993-9F0B-D3680F9C4F6F}' />
    </window>
    <window class='worksheet' name='GRAPH C: Meaured Value x Sector'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</field>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE285DD3-500A-4AD9-A594-D5AC77E5A9A6}' />
    </window>
    <window class='worksheet' name='GRAPH D: Month x Measured Value'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Year:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]</field>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Month:nk]</field>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15F6ACF3-9468-4DFE-8735-0C4ED6D42E64}' />
    </window>
    <window class='worksheet' name='Graph E: Measures Values'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.154eple1m8v1xr19ln95z1nufge6].[Multiple Values]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF789B1F-4645-4278-AA8B-316A35D9A749}' />
    </window>
    <window class='dashboard' maximized='true' name='CPI Dynamic Dashboard'>
      <viewpoints>
        <viewpoint name='GRAPH A: Month x Measured Value by Sector'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GRAPH B: Month and Year x Measured Values'>
          <zoom type='entire-view' />
          <highlight field='[federated.154eple1m8v1xr19ln95z1nufge6].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='GRAPH C: Meaured Value x Sector'>
          <zoom type='entire-view' />
          <highlight field='[federated.154eple1m8v1xr19ln95z1nufge6].[none:Sector:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='GRAPH D: Month x Measured Value'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Graph E: Measures Values' />
      </viewpoints>
      <active id='8' />
      <device-preview visible='true' />
      <simple-id uuid='{B4A883F7-3872-4C38-80AB-00FC24F66293}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CPI Dynamic Dashboard' width='192'>
      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
      Px4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GRAPH A: Month x Measured Value by Sector' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='GRAPH B: Month and Year x Measured Values' width='192'>
      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
      gqWh9n9Z2kzfJdSwJQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GRAPH C: Meaured Value x Sector' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eZRk2V3f+Xnvxb5HZEZGRu5bZe1dvUgtULcWEIMHI+GR7cEHbB/7wAgz
      wxgYwMJgz/gcgwGNB9vg4xlbssdGIGSMLQ5IgOQxQnK3jKRudXetWVW5Ve57ZuzbW+78EVkR
      GRkR72V2Z2ZlZb7PH3Xq3vzGfb+3/N5d3+9KQgiBjc05RJIkSX7SRtjYPEmeKgfI5XJP2gSb
      M8ZT5QC6rj9pE2zOGE+VA9jYHDW2A9ica2wHsDnXOB7/J5fLYRjGk7TFkkKhgCRJT9oMmzNE
      zQH8fv+TtONACCEIBoNP2gybM0TNAZ7sm1UwPzNFqqAyOtjL9PQs3YNjSFoB2dDwRhP4XMop
      sNPmrCGdjplggWEIpu7fRTUUxq5c5tHkJIXsJg5fnGuXxzAMg0wmY9cANkeG0+mUHNayk2Hm
      4QTxgTFyq/OUKxV0Af5gmFKpjAEoioIsyzgcp8ZkmzPA6XiahIFuCJYX5hkZ7mdudpq+wTGE
      WsQlCwollaDX9aStPFXcn98kW6jU0sPJCJ1h37EcyzAExp6GgiSBIp+NAcRT0gQ6GOl0mnA4
      /KTNOBX8/Cf/hLuPNmrpv/2XXuS7Xhg5lmP9p6/e49NfulVLv3Stn4//4EvHcqyTRJKk09ME
      sjkbfOvhCv/1rUe19GhvjO976eI7Lvf2zBr/5fWZWrq/K8xf/uCVd1zumXCAr99d5N9/+U4t
      faGvgx/76Lv5T1+9R66o1vK/+90jJDvsTvRxsrie5itvzdXShbJ2JA6wspVrKPeZkS7bAR6T
      LZSZXUnV0oHd/sIff2OKjVShlv/chW7Cfg872WItz+VUiEf8/Ombs+T3OMuLl3vZSOX53H+9
      X8vr6Qzww9/7PF9961FD+/tdl3oI+91sZ+rlOh0KXVE/r9ycI50v1/Kfv5hEkWVem1hqsPeD
      zw21PLdSRWMrXT8HRZHpjgVaasuqxuae8/V5nESD3pbak+ZL35xC1eoTrS8/M0Ak4Gmp/aFf
      +X1SuVIt/Us/8qEjseHH/ukfsrLVuKL4qXOAUkVjb7fF7TzcKXxjYpF/9rvfqKUvDXTyiR/9
      Lv7Dl++yvOfi9HQGyZdUXn+wXMsby8UA+I9fnWB+LV3Lj0f8CCH45c+8Wssb6g7zaz/+PXzu
      lfvMLO/U8j8efC9up4NPfeGNWl5vPMgHnxvil3/rlQbtD3/4eTwuB//g//1KLS8R9fPJv/OR
      luc2tbjNz3/qy7X0h14Y5m//xRf5s7uLDbrnx5NspPIsrGf2nIOPC30dFMtqg9btOppH5NNf
      utlQG18a6GzrALoh0I36PT5sL3V9J8/U0nYtHfK5uTbSha43lgtPoQP86K9+gZ1s/e3wy0f0
      djgN7GRLrO95g5crGp4jeAA/8dtfa0h/8mc+zNduL/DZP6k3Gz/w7CA/9f3fzl/9hc81PCT/
      4n/7823LnVzcwtijHeqOvGNbj4I7s+v82n+sv+QuD3byK3/ru1pqnzoHsDk9/L1PfZmyWv9G
      49d+/L8/cRteuTlHqaLV0i9c7DnU720HsHmq+XdfvMnmnj7SL/5P33Go35+N2Qwbm7eJ7QA2
      5xrbAWzONXYfwOaJkS9VGuZIPE4HsdDJzlucuAMIUV36LMuSvbb/nPOVN+f45Oe/VUs/P57k
      H/zND5yoDSfuAA9uv87DlQzDPXGuX3/mpA9vY9PAyfcBhGB9fpK5PUsXbGyeFCfuAE6HQiAY
      wRc4/d8g25x9TtwBeobG+c7v/E6comwttrE5Zpoc4P7dm9y6dZtCpX0YwvXVJbS3GUFle2OZ
      iYkJupIDb68AG5sjpKkTrMsuhuNeVtc3cDkU1FIOUS4g3GEcRoF0SeB3aETivYc+2Nrcfb7y
      tWqvvyx5uTjSV/ub0FWyBZVgwMPS4iKJnn40tYQDMBwu3A7l7Z+ljU0bmmqA7PY6r92dpyvk
      oliukMlmMRQXI4NJtja2WVxaalXOgUgMXuKFaxcoV0qUioWGvy0vL/Nofpa1uWkUr5+Hk9Ms
      Ly/ycHLqzHx/anP6aKoBxi9fJ+R3k8pXkEpZQuFOYmE/kiQT64gS7OqhMxpAeZtD+CVDYaAn
      Tt7QGvJ7+wfJTNwlX4HBjhjZ7W2215Zwh/tRpGpkaMMwYN/acMPQ0fdFtBNCoGmN5cNuGfr+
      tltVu3/JefV4jc3Ax+Xu/4zaMPSGj8arWqo2NGkN9H3lsqvdX65uGBj7ImILdrX7LDZ0oyl6
      tul1EPuumWGiPcz1baPdv6ZfN9pf3/032dB19H337fF12K/VdaO9DU13uYUDxGLVjz463X46
      Y9GGvw2NvbNP2zaXZ8gUdV749g8RDuyNYGAwNz3F2toG1y6Pc+utm3R29+Hze5H1MpmiStjn
      QpZl2Od4sqw01RCSJLUMn6IoCrKyvzapavf7czUMS+OFfFzu/gk8WVaQ9t1hSaJqQ5NWRpH3
      Ned2tfvLVWQZWVH2S3ft3VeuIqPs15pdh317o0iyifYw17eNdv+cpyIryHI7e/efm4Ky7749
      vg77tYoit7eh6S6f8ERYLDHAZcnJK//5D0hLEf76X/qe3b/IDI6OMzg6DkBn4nBrum1s3i4n
      6gBbK4945bU7dPWO8b5rV0/y0DY2LTlRB+jsHeWjvaP2GiCbU8OJOoD94NucNuzxRZtzje0A
      Nuca2wFszjW2A9ica2wHsDnX2A5gc66xHcDmXGM7gM25xnYAm3ON7QA25xrbAWzONbYD2Jxr
      Tl1oxEohzcTDWboHRpH0IrKu4ot113aKt7E5Sk5dDbC0tMalZ26Q2lhhcXaSle0CXvvhtzkm
      Tp0DOCRBqVzdKT4YiSLUUsM2PDY2R8mpawL1Dg0xOTlD/9Do7k7x1a02g17nkzbN5gxSc4Bi
      sdj0Nf2Tom9gAAwVFAc6IBsV8vkKpVKJrpALj1KvEQytgoJOMuKu5UV8Cvl8nq6gi2oJVYRW
      QRFagzbmr2o7g06EXs8XegW5jbYj4EAt1/Mlo4IQNGg7As6q1u+guCdfEhoYRoO2c1cb9SsN
      +bLQEFqlsdxQa60iNIx92oBLIp/PN+QBVMol3EqjDUF3Xbt3kzy1XMIl79N6qtruiJvKnj3C
      tEoJ5z5t2COTz+dJhN0E3fUGh6aWcUqN1zfsrWq7Qk68jr33uIyC1voeh5w4JfcebfM9jj6+
      xyEnGI3XQhK7sTh0XW8Ky3HayGazBIP2Rtc2R4PT6ZRqNcD+kBoni2BhdopUUefCUB+Tk1Mk
      h8aRtAKyoeEOx/G5qiE3WoXjsLF5u9RqgCeLQNcFs5MTlFQYu3KFuamHVIoZcIa4dmUcwzDI
      ZDJ2DWBzZDTUAE+auZkHRLoHKWwsVaOGCQnF6UTVq1HbHgddsmsAm6PkdDxNwqBcUllbWWJ4
      sJdHDyZIDl0AtYhLNsiVVEJe15O28lRRufM5RKYep9Ux9iGUrivHciwju4qRWa6lJW8EJTZy
      LMc6aU6HA0gKl/dsl3Tl2vXd/3mejD1PAdq9P0Bfer2WlsN9x+YA6v0vUHn1n9XSjgvfjffD
      /6SltvLmZyi/+k/r2pEP4P3eXz0Wu46C0+EANmcHQwOtVE/rlSMpVl9+E/X+H9XScnQI13N/
      9R2XazuAzalD33hYdaRd5OgQ+tY06s3P1vKU/vfYDvAYdeLzlL/yiVpa6X0e7/f9OqWv/Aqi
      uFPLd734MSTFjb78Ri1P8sVwDL2P0lf/MaKwWde+64dQ4q2jYWvTf4ooZ+rH638PcrD7KE/p
      bSF0FVFK19KSw4PkDjxBi+qoD/64oTZwDH8AyRtpqS1+7mOIwlYt7fsrv3k0Nkz9CVRyDXln
      wgGEVkGU6rtOinL1JLWpLyOy9c6b8+pfxMitUfrS36vlyT3P4hh6H9rMVxCpubr28kegjQOU
      v/ZrGFtTtbT3+/45KC6MzYe1PMnpQ0k+Q/EP/w7G9kwt3/3+nwaHm/KXf6luQ7gX7/f9OsUv
      /hzGRr0M98s/gZK8gb4+US/X4Ubpea6lXfrKTYq/+zdracfVj+L97l9oqT1pSn/yC7DnpeH7
      wd9BaeMAx0X5lV9FpOYb8p46B8h96kOI/EYt7fv+3zi2Y6kPv0jpjz5eS8uJq/h/4LMttfry
      m5Q+/xN1bec4/r/+OYzUI4zNB7V8Uc4iGVpD3uM3o7Ez16gtZdDX7lH83MdqeVKoj8APf/HA
      5yCEQH3ztxrynFc/irE9g75ys25vbBjH0Mvo27Ps3XRCDvfRDmN7tmHTCTnUXnuSiHIWY88z
      Ijk8yKHWIfefOgdA6LBnd5NjnccTouFYiNOxVupwCMpf/URDjmP0O9Dmvkblz/5FPe/Sh3EM
      vUzhNz/a0P72/43Pty05/5nvB61YS/v+2ueO0O63jzb95YZaXul5Ht9f+XRL7dPnADY2e6i8
      8WlEOVtLO6/8D4f6ve0ANk81lTc+jciu1tJK37sP9ftT90GMjc1JYjuAzbnGbgLZPDGEVkJU
      6vtFS4oTyX2yq31tB7B5Yqh3fo/yn/6jWloZehnfR//lidpw4g4wefcN7i+lGO1NcOWqvVOk
      zZPlxPsAlXKZlUf3mZxfP+lD29g0ceIOEAgESCR6iXfFT/rQNjZNnLgDdCYHePHFF9GKaWux
      jc0x0+QAkxN3uH37LiVNb6UHYHN9Fc2oL0NYXVsFyqytptr+5jFba4vcvn2bSGfy7VttY3NE
      NHWCKyiMdPtZWtnA63ailnKgltAUPw6jQLYi4ZUrKC4Pd27d5vL1Z9je3qY74Wd7K83mygyd
      g2MkYqGmg63N3eeVb7xVTXgiPHOp/lmdMDQKJQ2f18XmxibRzjiGVkEGhOLEqdhTFjZHT4un
      SjC/skXYK7Ozs8Pq+gaqITEymCSXr5DLVN/yTpebRCKB1+1CVytsrW7gCvpw+SMkogE0TUfT
      tIaSE4OXuDTSi0CglQsNfysWSzx6NM3SzAyy28vM9DSzM5M8mJxBkiSLRW/7/yZ29WJ/bpMS
      0XpBnRCCVodsp20lbmfz/nzRrtxdm/fnCtF8Ji1tEOIQ9ppprc9ht4Rma02ub1PBbbUc/Pq2
      KEM8PrcW+qYaYGRoGI/bRb5YJh7S6E1243U7kCSF7kQn3S4ffo8Tl9vL+MVxAMbHRtlIFRjp
      76RSDoGhU6roYOgEAo2HCHckGdV0cvsidPn8AWQJNMMgEAywubpCMZ9FckVRJDAMA8MwUPad
      g2EYLR+oVlHuhCEQLVZ0VrXND1TTBRZtjtfi4tZsaLJXILV4+FraKwxoERe1tVZgtHKsFr9v
      5dxCtL4ORovrUNfuK8No5UTtz63Vg2oYRpMTGa20QrS+vi200NpeaOEAXq8XgIDfR8Dva/hb
      R1frr57cviB9vuoMnttTfbADvuZYnhsLD7n7YIqhkTGeHdsbVcBgbnqKTCZHz6VxHty+SXLw
      AlJHFKdkkC2qhHwuZFkGqbFMWZYxpMaKTELaDfQlNWnFPi0S7bWy1FIrSVLDdZdluemBktgt
      t8leCUluZ+8+rSQ3adnVSi3sbSpXkpBbNB2rWqlJ2+o6KLKM0aRtHUiten3blbtfqzTdi8da
      icbnWpFl9Bbn1vr6yoh213efbXDCE2GdfRf4rnAn/98ffZ5v3rzPx37wL+z+RWZwdJzB0Wrq
      mRvR3Xz/SZpncw45UQfYWprmG7dnePd3fISerthJHtrGpiUnXAOM8b19Yyd5SBsbU+yxRZtz
      je0ANuca2wFszjW2A9ica2wHsDnX2A5gc66xHcDmXGM7gM25xnYAm3ON7QA25xrbAWzONbYD
      2JxrbAewOdecushw+e1VHsytEuvqQTFKCLVMR98IfteT3Mne5qxy6mqA1c0szzz3LJV8mtXF
      GdJl2X74bY6NU+cAAbfE8soqmpCJJXpRtDwltX2IFhubd8KpawJ1DYywvrZGz4URdLWCQwb1
      OLdBsjnX1Bwgl8uh66fjTevx+shnMw155SIUCgWUvg81bHWp6W6EsxNt+HtreXJ0EDWdptL3
      wYZtQzXDi1BiDVop3IeWTlPpfT8iul3XCj/ICupebTBZ1SZfRoTqO0hqBEESjdpAV1Xb/V6E
      vx4AQJMjIJyNWl9HVZv4NoS3v5avKjEk4WvUeiPo6TSVrncjXIk92k4k3dOgVcKXqWQylPfk
      AeglHd07gL73mkWuUkmnKQ99T8NeaHpZYHj6Gq9v7PKu9s+Brta1qoTh7tmnHa9qB/67hg20
      dVXBcCUatR2jqOk05f4PQSVfv2aaC+GI77vHQ7v3+DsQpfqzohkehNKx7x73V7U970dE69vm
      wl0kcay7zB0t6XSacDj8pM2wOSNIkiSdkiaQYG56ku1MkcH+buYWVuhM9tdGgSLJQbsj/JSg
      p1Jom/UNx2W/H2fy9IbBPCUOAH2DQ+TuP2B1bYdrz95gdnKK9PYynnAfPU4ZXdcxDKMp2pzN
      6SL3yqtkPvPbtbTn+eeJ/dRPPkGLzDkdDiAEkw8eMjJ+mdTiDKl0looOsXiSQi6PZoBTUZBl
      GYfjdJj8pClPTWHk6u1k50A/jtjxhJrR1tZRV1ZqaSUSwTU02FIr7w9KJUun+p6dGsvcbhez
      0zOMjg2zsrDA+PgoWrmE2yFRUjWcSnOkufNM6jO/TXnifi0d+9EfIfDBDx7LsfJf/zrpz/77
      Wtr3be+h8yd/4liOddKcDgeQZIbHxmvJoZHqqInLVw3NaMeHszkuTocD2NhYUHjtNTK/9/u1
      tGt0hNgP/9A7Ltd2gF20zU3EnnkQJRJBdrtNfmFzXGz93/8So1Dv30R+4AcwMlkqMzO1PGk3
      iPM75Uw4gNB12DuJJ8lIztanVnjtNVK/VR+lcA0P0/mTP876L/4S2upqLT/+d38W77M3WpZR
      unsXo1ispd1jYyiRyDs8CxCq2hhm3eFoER26PXo2S/nBg/rPOztxDQ29Y7uOgpWf+3lEoX7N
      On/6p3AN9LfUFm/exEjXJzBDH/nIkdjQdH15Ch0g+8dfxCjVZxT9738fpZu32P7kp2p57itX
      SPwff5/sl/4zRqG+EYf/5ZcQxRLa2lotT34bE2s7//Y3UBcXa+nOn/lpfO96oaV26199Cm21
      PoIS/h//Mp4rV1pq1/7hL1CZnKqlO/7XH8P/8ksHtktdXGTz//ontbT/gx+g40f/1oF/f5zo
      6xsY+fpbXWiqifp4WPmZjzfce3gKHSD9+3+AkarvRea5fLmtNvP5L6DvmZRxX7hwrLa1ojI7
      i/roUS1tZLIUb91m69f/eS3P0d1N9y/+w5a/13d2KN66VUvLHi++97x4bPYehvwrryKMes3r
      e6H1S+A089Q5wEmip1JU5hdqadnrxX2hdXTr0p077PzGb9bSjmSSeLsJIF3DyNXXM+2tpfZT
      WVxk+//5V7W00hU/lAMIIVj9+N9tyIv/3M+iLi5R2uNYruEh/C8dvLYB2P7X/wZRLtfL+D9/
      5VC/Py4Kr3+L9O/8h1raNTxEx//yP7fU2g5gQuneRMOb2jUyQvcv/WJLrVEooi7UnaXVbiRP
      iga7ADSNyuQk2S/8YS3L9/JL+F96ifVP/GPY81aP/cjHTsrMI8PI5xvOWfb52mptB7BpoHTr
      VsOAwt43/Glk9e//7+jb9RWenT/544f6ve0ANk81+k4Kfbu+jF2oh1srduq+CLOxOUnsGsDm
      iaGtbzS21cMh3GMnu4XWiTuAEAb5QhG3243zFK8StDl+im++yc6//Xe1tOfGDbp+7mdP1IYT
      fwJvvvY1FlJlemJhXnjXu0/68DY2DZx4HyAaibC1NEeqdHqGCW3OLyfuAKpaIRAMU1ErJ31o
      G5smTr4G6Ozm8uXLyPrpHl+2OR80OcDso1mgxKPZ6spILb/NWqr9VP2hDyjLyLLMc88/fetG
      bM4eTZ3gYrEI6BQLOb756n+jtz/Oo/UcKx4vnX6J+9MrjIz3k0tn8QS7GB/uOfDB1ubu819e
      fZ1yuUzX4CU+/KH62pNiPk2maBCP+JmamqFnaBSjUkTBQPYE8dpRIWyOgaYaQFNVCuksstdD
      R3c/XdEQPf1DONDZyeQJKCp53cH4pYs4DKNVmW1JDF7i6tgAQhLolVLD3wqFMpvryyw/mqVr
      YIj52VnW11eYnVvE7ZRpF76oXVCjw+gPExrpnWpFGyNal9vmHA4TyukYzk0c0oaW2jY/P8l7
      AS1qgIujw8yv7XBhuJ9ysYLiUhAbjxgcHUPLb1OIJwnHIrgcLpLJzgMb8BhvqJOLwyVyhqsh
      vyPexfrmBqqQ8HncKDKkttZwBrqRAMMwMAyD/VfOMPTd/D0ni9iNcteo1VtoEVWtOEi5JloM
      0VLbyl7RzgaxX2uAvl9LW62ht7Z3P49DzBxUu9/et1Pu/sfP7Po2lXtE2lYu0OQAbn+ICyMh
      ALw+DwAjo7vr6H1Jonu0Xt/hmiUbCw95ODPP5avXGOjbGyzJYG56ip2dDFcujzNx6yaJ/hGi
      0TAOdDJFlbDPtRtyo3H4VJEVjP2hOHgciqNZy/4vrKSqVtqnlVtoJTMtRkttKxskpY0NUnO5
      cpOWNlq5SStJEkqLyUZlN8RMa3ubtfu/SpNNtO3KlWh8FciHsaHVPTbRChMb9nOiE2Hx/nH+
      XEc3n/+93+XLUic/8oN/YfcvMoOj4wyOVlORaMdufugkzbM5h5yoA2wsTvHqt+7z7Pv+PEN9
      Cesf2NgcMydbA/SN8dG+k13sZGNjhr0c2uZcYzuAzbnGdgCbc43tADbnGtsBbM41tgPYnGts
      B7A519gOYHOusR3A5lxjO4DNucZ2AJtzje0ANuca2wFszjWnLjRbIbXBg9klOpL9KHoR1AqR
      HnuneJvj4dTVAKvrKa4/e4NSZpvlhSm2iwKf/fDbHBOnzgG8TsHWThrVgFi8B0nNo+3/LtbG
      5og4dU2g7qExFubmGb8wilYp41KgrOk4938ba2NzBNQcIJfLtfzK/kkQjkYp5LIAVHb/TZeg
      UCigXb7UsNtgDoHu9aI9c72WJ/X2kk6nUS+OY/TUP77PSRKGx92gJZmsascvoHfFa9l5RUa4
      XY3ari7S6TSVC2PosXp4gLzDAUI0ajs7q+WOjqCFgnWtywmK0qAV0Wi13OFhtD373+bdbmRJ
      btSGQlXt4CCa01nLL3i8yNCgLSUSZNLpRruATLlMJRxuyC8nu0mn02jXr8GeqApZVaUSCjWW
      29NT1V67Wt169PH11TTUYKCx3Mf34soVRLkeCienG2h+f6N2oL9a7uVLDfum5RDovn33uK+v
      Wu6lixjZbF0rgeHxNGr33uNEV/1C/M5nkcShgsw8WdLpNOF925rquo4sy01REnRdR1Ea+w6G
      YSBJ0oG1QFPkgpPUCiEQQhxYaxhGU34rbau8o9Ie9F4cl3b/PTb0CuUKuFxKk1aSJOnUNYEO
      y+OHQwid2alpdAG+cIyero4mbf0C6sxM7mpDUXoSzfGN6lqNra08HR3hhuO11qrs7JSIhJyk
      cgaRUPNu5nWtYH1liWyhTFeyj4DX1aRt1AMYlMs6Llfr21a1TZDL5dnZSdPb19PS3v155XwO
      w+nB42x+0JucT1MRkoJiUq4wdAqlEqmtHRI9vaba2pnpGrqQcLRo6rbUGhIOh9m9eJxWcDpb
      3zc4hZ3gw1LzdlEmX4SOoJOHdybJG80VW/3NUCFXEMQjLh7enSKjNjf99r5FJm5+i7v3JsgU
      yk0XeK92Z2OJb37jW9y7N0FJEyZaMIwyq2tpenp68LqdpuXWMdBU3UKrMT01w/pminRJbatt
      xUG0hq6j775l29mglrM8eOstNtIZNlKFA52bMHR03bzcmlYYaAfQCiHQ1BLFYuvrAGfAAWpI
      XkIBWE+rXHlmHJ9stv+Al0hIZmW7zJUb4wQcZsOsMvF4DF2toAvzPQ2i8QHGR3twuv34PeaV
      69rSKrJDMD8/T7548FDxumU4SoWuzhgXhpME2tQUtbLUErde/xYP5xaagl+1QwjDMtqi0xNC
      drpJJmIta8HW5QqMFi+t1mLjANoyk/fucevWHTKl9rvSnx0HEBW2NjMIYeAPBpFN9+kts7iw
      Tjm7zf2Hc2imd1Qlly0iSTpbWzkTnUBVi2TyGv39/fg8ThOtREc8glqR6Yp5WdvImmgBNG6/
      8QYTE5PoFvsPZ3fWuHN3kgf3pyhp5s5SKWQoF8uUVY1Cuf1DApBan+fegzlWFubJmjxQAFop
      Q2YzSzafJZUpmmoNvcyb36rWmmUL3xaGyuuvvsJbt+5SshwZd1KulBgYHMDjad28hLPkABLk
      C3lrHQAKbrcDxeXC73Kgmb5N3Fy6fpXOzm4GeqMmOtha38LtkVlaWqJo+kAJVFXD4ZDIVxSG
      Bpr7K/s56LkFwp0MjwwxdmEEt8XQscPlof/SJYb7eon42j8kALqQkISGMxilI+gxL9cTYmC0
      m1JZIh5tv0k1sOdtLppim7awAofTRalUpFS02l9C0NHZxc7GBsLkpXFGHEBQqQiuP3OdRCKB
      27RJY7C1mWXswgUuXbnC2NgY/hadvzoV3vizr1Mq55hb3DHRSXT3drO9vkUpu8k3X3uLbKn9
      nrXFoko44sfQdSoVq71tHVy6colwKIzb1FaQZIl8NsXSwiJliwdKUhxMT9xjfX2TioU2GApR
      zGfIpNKUTWsWg9WlJSS3j6DHhW5ark4uX6E70UU4FsfvtRiTkdzEk10kEkmiIXMnBAmX243H
      66SQa18LnREHqEYBT+9ssry8TKlFp7aOzsrSKsvzi2TyO2xumzVrABx0xKOsradJdFnFKlXw
      +93IThedkVBzJOoaEp1dCbLba2ysrpo6SpUK0w8fsLm2wsJK2tKGvr4kwY44XgtnURwu4rEY
      nclO5JahY+vIkkSpVN6NSm1WY8p0J5MUcxlyhaJF30LG7/cQjMZJxmMYunm7XogS2+kKvb09
      li8CkHA4FPzhBD3xYFvVGXEACbdLkMrqDA8P4TPt/ClEI16cfi+p7SKJ7rCJFi8WzA4AAA7v
      SURBVEAQjHTgdUKhZFbtCjKZHPGuBP5gB2Pjo4RNmxU6hlAwjDLZtNUOPE6Gxy/h83noMrmZ
      j/EHQ1QyO+QtapZSdofVpU02N9ct2vUauaJBf18Sn89n0b8SZFLrlIWHsBu2THcXkthYnuGb
      33iDifsPKFbMJ2IlyYEiKty7e89SC2UePpilVCqimtRCT/08QBWD+dlFDFFifn6B/uERAkq7
      h0+md3DoUGUvzM0RTg7SaTGiUSkW0Nkdc7bcBNNBMOClIx7HFbJ6qCXC4Sg+nx+X222qLBby
      LMzNkylp9Js2BcHlDxFLhHC7QsT8Zs6qEI6ECUesXhYAglJZIGk5NtIK473mfYt4coAxESEe
      dqJajEQJQ0Url5AcCtupIoFus4EGmVIxRzqdIRSLt1WdEQeQ6R3oojLrI9EhkcqUCJj0/A9b
      dndPkq30Jpl8kpiJE8TiidrGFe0mXupobG9t4/ZXUCoeOkPtbxKoTN6fQtMyuEPDXBjuaqss
      FbNsbGXwuxXKmo6nxWRR7cxkB12JDh4+nCaeiBN0t3ugDGYePCBTUpGBsStX8betZWWiUR/3
      3tggOpwkV9Twty23OlG1tb5EZkemb/RqWx2AJHsIRCN0xjtQPH5TbfX8mmeP93NGHAAyOym2
      d7aRlAiDQ0nrHxwYjWA0ydDwAKm8eRs1l0lT0apVcyAUwdP2IRHouszw2Bgb6SKjQ1Y77Thw
      OQXxxAjCGTBVRju66erYIl82LAYDQNcrbGykGH/mBgGX2dtUoa8/waPVImFHiUJRNXEAcLoC
      XH/xGitrKYI+s3JBkp14ZIloT7LlzG6DVpIZGbtgqqnjoCMWRFNVDJPq+Iz0ASAa78Gt6BRz
      KTKFo9uDeHt9mTffuMm9+w/RJavLVWZqch61sMnCasZUub68wJ237lDWyuQK5kN6y/PTzC9t
      srI4SyprvWOn2+3C5fHgMJ0MBL1cZHVulWx2kx0LG1y+GD65yGZBELUYBs1l1lnfqhANOMjm
      ze+FoRfZ3thhbW2N/AHvm64WmV9YMe2KQ4VcKo+QdHZ22g8hnxkHAIGmV0codIsJoMMQ6xog
      0elHAhTTcXWJUCRBR8TFTqZCLGpeRXu8PjwuN/5AAKfFm69nYJhoyIfidKJYOqFOKqfhl3Vy
      Fp1gh8tLKOJlczuHz7QGALWYZitdJujzWM5Gq6pBuZhBVbx0hM36TRobG2n6L4zTmxygO2Z+
      zYShsjj/iNt3JghEYhbdLA/PftuL9Cb76DcZ6DgjTSCDjdVNupIJBBJBv/nNPBw6AgfBgItc
      rkQsYNa30Mhli3iCARyy+fvJ7fUxfqO6ZNfRYrVlIzKBoJ+yqhEOW0wsIZOMRyjhJGw6G13F
      EwqCw9m0dVpTqQ4H5VKBQsGJYbEWIhgKs7Vwh1Cnn41UgWTbB1shs7PMwppKdyKKPxg07S+A
      weKjeXqG+qmYDnUbLC8skMkXkSUJlz9M0Nu63DNSA0g4vV76+vpIdIQQFmt2DoeLZCJEqqjQ
      l7AerSlXrGYoqzqfP0A4HCYcDuOyHNPWyBd1+rojbGxYzQPAwvw8HoeEbjrDbbCxsogme3AZ
      FbJF8+UNisNDRySI7FAsO5aK00tXMsbWVo5IwKy5JDF26Vl6EyFki+YaGKyvbpAcHEQIhbDp
      i0iiqztKuSSRiHrY3D7zTSCdxfkVZFmmUkizYTm5dRjKrG4UGe5yM7OYstA6GB4ZxOPxHuCt
      fhic9CZCTMyluDBkNloEINHdHWczZbW+CNyBKP3JDjqSfYQtOqvlfIqNxXUMCbIFc2cx9Aqq
      pODQykw8mMKswSSMChXDQV9fn0WnXaYr2YtLri6cM3cXCYczREfEwcpOmZ5E+wnMM+IADnoS
      Ye7cvcvidoX+7qPaXVKgaQoBHyys500vZJUSc9OPqJQyLK0dpRNqLCynuNQfYnJu00Krs7FT
      xKnmKZg2E2QCfg+G7MKBTsWi3+T2R7nx3hdwSQrRgPlcBMLA4fIRDvrQ8kXM3EVW3ATcsLi0
      gmbRtxBGnumJGYrlPBupkqkWKqyvbSMMg4ravi90RhwAOhK9XLt6lSsXxyxmKg+DwfTUIxw4
      Gb1y5QDRKdxcvH4Vh+IiadlcOgwKQb+TpfUM8Q6rcmUUKmQLRRYezWM6Xyp0FmanmZ1b3L/P
      dzOSTDGXxRsIolhcXsXlx6EXwBfiyo0rmLmLYVRI51WcokQmb16zSLKPsaujqGWNqGnnGkCi
      ULQeMTsjneDjQkIr51gvlslOTDAwOELIZ3Y7JcKRGOFI7IjtMMjnC8gyTE9P4bly2cQZZa49
      +/yBytSEk6HBfgQSHqf5u1At7LC6UyGkpNj0BoibLEbTShm2N3IkIiGyRbXt124AkuTEKesU
      NZmE2/xxFKLMxJv3GLw2xtZOnoBpTe/k4qULlDVhOspmO4ApMldvPHtArWBjdYVcsYwQ0JXs
      Nb3xh0MgJCc9PSGmZrZJZ0v4OlqPrKwszPBgehG308H1d79o8lGMoFyuWI7oPMbhDiCpS6RU
      hXHTNU4CDTcjF/vJ6Q4SpsuhDZZXNrj6zA3y6Q1Ui2aYJLnp7utkcyvL1WvDFhYXeXBzgmh/
      F7ojyGAbZzkzTaAnj0S8u4utpXlkSWdjy7r6PTgOLo4PUxF+nnvhmulDlewfJBby43RaDYFK
      1e97dz+8t0ItZ/EEu0hGfWRMJ80Eqa3dxXW6atG3EKyvLFPRdFZXViy+ywBEmUJZIhIMgLCa
      6/Fw5YXrOCQHHZH218t2gCNFwuV2Mj+/gs9v0VE8BOsrizxaWCKb3iZX0i2GDGWSPd1EYp24
      TCfuZEIBNwuLSywuzFNSzR8olydEKbfOSqpA2G/xQYzDQfUDF92ihlG48ex15memiPaM0mm5
      xl+hUMiiaRrCYh64OtTsJ5FM4nacg6UQp4V4coC+ZBdu99ENg8Y6Y5RLOv3JMKtrVvMAOqvr
      KXp7uy2XQkB1nb9kObsMlWIGlz9Od9hLOmc+AuPxhRi/eInLly9aLE032NzYxOXxkkttU9bM
      Z64FOr5AhK6uOC6LdU5Q5u7thxQKRdP5ENsBjhSZeHc3PQk/K2vma4EOg8Ppo6vTz6PFHfr7
      rRbOyXhdErOz86gWTQrF5SUc9OHzB3FaDO24fBFkLc12yWotkEwwZPVN9mMk/D6FVLqMU5TY
      Sps7liS5GBrqPVCTDRSEUa4GxDr73wOcBgTZbJad9Q3weBk7wHe+B2VzfYWKLuH1+RC6jvlt
      M0hntygJNxXNMPkuWJBPbVCRvAwOdFqGntTVEuuLazgjIYoVnaBF1IuDIeEPd+F377BTEIz0
      mg1tVj+1zJcqSEj4QhHLWkBxONArBUoVg2Cbou0a4MgQLMwtoxbLdCa7sVjfdig6uxIUsyny
      2RSFstWXUDLx7iGcsgvFtAlkkMqU2FmZ4Y1bE6ZvSQBDV/H6PORyRdOJpcMi9AqFQhlZkk0+
      IQWQiHYEyOcNwj6JrR3zaBPVPogACdNybQc4MiQCPoWSJJifnCR7hEuywaBcEQQCbvImH3gD
      ICT6evt413PXcZt6oUK8I0gkMUJvxE3ewrEUpwfZ7SIWCR/h8C4IDPLFMh6Px6LZJOH2RAkH
      YCNdoavD7LsIQbmkMzI2QnfvINFg+wEJ2wGODImBkQtcvXqVSxcvEjrCUSBQ6O3pJFsQxE1v
      PIDg0eQD7tydsFgMBy5fGEnNkDccFk2a6sK5inDhljTS+YMs+DsYsuwi5HOSzmQs7QWdrdUN
      /CEfOcsXjEappOOQDAomC/1sB3gq0FhaTTE8NGjylVmVlcV5SnoZHC7LgUKtUiQc7yUZDVpE
      0gBvMEbUL6O7gsRM3qiHRdcKZLayeHxu0jkLxxIa+UyG2UcLFt8kSOTSq9y6dZ+FhQXTMC52
      J/gpYHl+EU0rMT09Te/gKLFQ+4kdt9dLEAWQsRoFlRWFtaVpJCQuxBJmSrxuiYLmIqgUSOUr
      dFp8FXZQFGeQZ7/9XaytrtNl8RERyAxcvk5fX7JlxOq9xLqGufGMD8nhIGKyeM+uAZ4Cegb6
      kfQiXrebLZO17QAut9diAuwxOuvr20SjYcLRKA6LYVCHy49iFMiqMsEjCzgAQqhohszQyLDl
      UCySxPbaEg8nJ8lbhHKUpAoPb91lbW2ZVZNZedsBngpk/H4fy8trBE3e/gAut5tIRyfxeCeK
      aadSIdnbi1OWUWSrsFiglvNEuwbo74qQLx9hB18I3njt60xNzVC0jJAn43E70TXVevUqHsav
      j4MBEZMZZtsBnhJiXf309XRYfj98781v8NVXvsb0zJzl2ppiZpPpiRnShSw5i+h0G2srzEw9
      ZHk7R9B7dH0ASXZy7dpVgsGAxbAtCKNMPlPAELpl0F1QeXjnPoFIgJRJ4DHbAZ4KDGYeTGDI
      sLFp/qXXjRffx8vveY7V1VV0ixlTTyDK6MVBDEO2DOfeN3KF9377u7g0Pnakcxy6muPm199k
      eW2ZrYx5J1iSvfSP9oHkptcyQp6DWGeY1bVtIibfUdud4KcCmbGLlylVKoQ6IqbK26//N9Yy
      FYYHBy2aQCA7XHgcbi5cHuagrXq1nGd9u0hfj9WnmQdDVjz0jfawupFiYMiqBiiysV2hN+Zi
      ZTNPX5fZkLBOoKOPa8N95sd/GzbbnDgSoUiEaFBmacX8u+Srz72HD77/ZQYH+3FaNCkqhTQL
      G5s8mnhISTMfBlVLWd568ybTs0t0xM3DxB8GQy+TLUIyHuSt19/CrA6QZCdqKc3yZpr15QVU
      0xpOYnt9kbt375nGibId4KlAsPRoijfvLdDTbV4DKA4HTqcTp7P1tkuNxerkCiUUxboTjDDI
      F4ooioJkrT4wisOLx2lQ0mX6+5PmTRIhKKUzBKMRkv0DOE3PT8MXSjDSG2UndQ7Co59tqsGu
      rl9IsmK5HPrgOL1h+ns6cLjclovhHJ4gFy8MEwqHLDurhyUSjeFxOkkO9GGx+wEOh8zi4hpu
      iwlBcKOIHFMLW8TPfnj0s46DYMDJ4lqaeOfRfWxfym5REj5cWp4dixCG5fw2t755k9XNddIW
      YVEOhSTTEY8T9DlIZ6wiPQjCyQHe+54XiZrGBQJQWV9aIxDysmUSJuf/B3qTOE1OTTdJAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GRAPH D: Month x Measured Value' width='192'>
      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
      BqMZYBSMaAAAGrJ/GvfKf0UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Graph E: Measures Values' width='192'>
      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
      DE40/z8aRfMPyf7TewAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
